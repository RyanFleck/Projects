package com.rcf.algorithms;

import java.util.ArrayList;

/*
 * Each new term in the Fibonacci sequence is generated by adding the previous
 * two terms. By starting with 1 and 2, the first 10 terms will be:
 * 
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * 
 * By considering the terms in the Fibonacci sequence whose values do not exceed
 * four million, find the sum of the even-valued terms.
 * 
 */

public class Fibonacci {

    public static int[] generateTo( int ceil ) {
        ArrayList<Integer> fseq = new ArrayList<Integer>();
        fseq.add( 0 );
        int next = 1;
        while ( next < ceil ) {
            fseq.add( next );
            next = fseq.get( fseq.size() - 1 ) + fseq.get( fseq.size() - 2 );
        }
        return toIntArray( fseq );
    }

    private static int[] toIntArray( ArrayList<Integer> a ) {
        int[] returnedArray = new int[a.size()];
        for ( int x = 0; x < a.size(); x++ ) {
            returnedArray[x] = a.get( x );
        }
        return returnedArray;
    }
}
